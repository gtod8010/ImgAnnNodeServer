module.exports = (dataModel) => {
    return {
        commit : _commitFunc(dataModel),
        loadWorkplace : _loadWorkplace(dataModel)
    }
}

//TODO
// PUT /api/v1/image/commit/:image
function _commitFunc(dataModel) {
    //task.commit
    return async(req,res,next) => {
        const imageId = req.params.image;
        try {
            commitRes = await dataModel.commitTask(imageId);
            const message = {
                'status' : 'success',
                'image' : imageId
            };
            console.log("commit");
            console.log(imageId)
            res.status(200).json(message);
        } catch (err) {
            console.log(err);
            const message = {
                'status' : 'Internal Server Error',
                'detail' : 'sorry, you connot commit this image...maybe...the data server have went to USA...\n'+
                            '///////////////////////////////////////////////////////////////////////////////(/(//(/((///(((((((((((\n'+
                            '////////////////////////////////////(((///(((((####%%#####(//////////////////////(,,*,(///((((((((((((\n'+
                            '///(((//////////////////////////////((/(%######################%#////////((((((/#,,,,#//((((((((((((((\n'+
                            '//(((((((((((((((((((((((((((/(((((#%##############################%((((((((((((**,,*(((((((((((((((((\n'+
                            '//((((((((((((((((((((((((((((((#######################################((((((((#,*****,,(//(((((((((((\n'+
                            '//////////////////////////////%##########################################((((((%(**((*,,/,,*(#((((((((\n'+
                            '////////////////////////////##############################################/////,,,,,,,,(,,,(,,((((((((\n'+
                            '//***********************/*%###############################################(///,,,,,(*,,(,,,,#((((((((\n'+
                            '//************************%#################################################(//*,,,,**,,,,,((((((((((/\n'+
                            '//,,,,,,,,,,,,,,,,,,,,,,,%###################################################((#*,,,,,,,,,//(/////(///\n'+
                            '//*******,,*,*,,,,,,,,,,,#####################################%%%#(//*********(((#,,,,,,#(#/(/////////\n'+
                            '//%%%%%%%%%%%%%%%%%%&%%%&########################%#/*,********,,****,,********/((((((((##%%%//(///////\n'+
                            '//######################%##############%%(***,,,,*,,,***,,,****(*,,***,*****,,*(((((((((((#/(/////////\n'+
                            '//*************,********%#######%/***,******,**,** ,**,**,,#**,,*,,******,*,,,*((((((((((%//(/////////\n'+
                            '//*,,**,,,,,,,,,,,,,,,,,%%/****,*,*,(***,,*,,,*,****,*,***,,,*,**///*,,*/,*,*,*/****#((##*//(/////////\n'+
                            '//*,,,*******,,,,,,,,,,,(*,**,***,,,,,,,**,,,,,,*,,********,(            *,.*,*(#*,*#((%////(/////////\n'+
                            '//*,,,,,,,,,,,,,,,,,,,,,,*,**,***,,,*,,***///*,,*/(,**,**,/    *@,     ***,*,,*%,#,*#(%*////(/////////\n'+
                            '//*,,*********,*****,,,*,(********,**,           . (**,******(.     /******,,**/**(((#**////(/////////\n'+
                            '//****************,,,,/******,,.*,,,,(           .*,********,,,,**,,*********,((((((/***////(/////////\n'+
                            '//***************,**,(,*/(/,*,****,,,,***//////***,,*****,***,,****,,,,******#((((#*****//////////////\n'+
                            '//((((((((((((((((((((,**,(,*,*,*,,,*,*********,*,***,,**,*/*.   #/,,,*,,,**#((((#******//////////////\n'+
                            '//,,,,*((((((((((((((((*****,*,/,**,,,********/#         .,(%%%%%%%**,,,**%(((((#********/////////////\n'+
                            '//,,,,*((((((((((//////(/##//##(#/*,,,,******(%%%%%%%(****/##/*,**,,***/#(((((#/*********/////////////\n'+
                            '//,,,,*(((((##,,,,,,,,,,*(#((#(#%,,*(*,**,,,,**//***,,*,*,**,******/#((((((((%**********//////////////\n'+
                            '//,,,,*(#(##(#,,,,,,,,,,*###(###%(((((((%/*,*,,***,,,****,**,*#,.  #((((((((/***********//////////////\n'+
                            '//,,,**(######,,,,,,,,,,/#%#(((((((((((((((.          ,(#(,       ,(((((%(#,************//////////////\n'+
                            '//,**,*#######,,,,,,,,*((((((((((((((((((((#..    #((((  .(((((  #((((((%,,**************/////////////\n'+
                            '//##############%%###%((((((((((((((((((((((((((((((((((/(((((((/(((((((*,,,,************/////////////\n'+
                            '//##################%(((((((((((((((((((%#((((((((((((((((((#*****,*,,,,,(,,,************/////////////\n'+
                            '//*******,**********%((((((((((((((#*(((((((((((((#####(((((#,**..**./*.*#*,,************//(//////////'
            };
            res.status(500).json(message);
            next(err);
            return;
        }
    }
}

function _loadWorkplace(dataModel) {
    return async(req,res,next) => {
        const imageId = req.params.image;

        try{
            await dataModel.assignTaskIntoWorkplace(imageId);
            const message = {
                'status' : 'success',
                'image' : imageId
            };
            res.status(200).json(message);
        } catch (err) {
            console.log(err);

            const message = {
                'status' : 'Internal Server Error',
                'detail' : 'sorry, you connot assign task.'
            };
            res.status(500).json(message);
            next(err);
            return;
        }
    }
}
